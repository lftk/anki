// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: anki.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StockNotetype_OriginalStockKind int32

const (
	StockNotetype_ORIGINAL_STOCK_KIND_UNKNOWN                 StockNotetype_OriginalStockKind = 0
	StockNotetype_ORIGINAL_STOCK_KIND_BASIC                   StockNotetype_OriginalStockKind = 1
	StockNotetype_ORIGINAL_STOCK_KIND_BASIC_AND_REVERSED      StockNotetype_OriginalStockKind = 2
	StockNotetype_ORIGINAL_STOCK_KIND_BASIC_OPTIONAL_REVERSED StockNotetype_OriginalStockKind = 3
	StockNotetype_ORIGINAL_STOCK_KIND_BASIC_TYPING            StockNotetype_OriginalStockKind = 4
	StockNotetype_ORIGINAL_STOCK_KIND_CLOZE                   StockNotetype_OriginalStockKind = 5
	StockNotetype_ORIGINAL_STOCK_KIND_IMAGE_OCCLUSION         StockNotetype_OriginalStockKind = 6
)

// Enum value maps for StockNotetype_OriginalStockKind.
var (
	StockNotetype_OriginalStockKind_name = map[int32]string{
		0: "ORIGINAL_STOCK_KIND_UNKNOWN",
		1: "ORIGINAL_STOCK_KIND_BASIC",
		2: "ORIGINAL_STOCK_KIND_BASIC_AND_REVERSED",
		3: "ORIGINAL_STOCK_KIND_BASIC_OPTIONAL_REVERSED",
		4: "ORIGINAL_STOCK_KIND_BASIC_TYPING",
		5: "ORIGINAL_STOCK_KIND_CLOZE",
		6: "ORIGINAL_STOCK_KIND_IMAGE_OCCLUSION",
	}
	StockNotetype_OriginalStockKind_value = map[string]int32{
		"ORIGINAL_STOCK_KIND_UNKNOWN":                 0,
		"ORIGINAL_STOCK_KIND_BASIC":                   1,
		"ORIGINAL_STOCK_KIND_BASIC_AND_REVERSED":      2,
		"ORIGINAL_STOCK_KIND_BASIC_OPTIONAL_REVERSED": 3,
		"ORIGINAL_STOCK_KIND_BASIC_TYPING":            4,
		"ORIGINAL_STOCK_KIND_CLOZE":                   5,
		"ORIGINAL_STOCK_KIND_IMAGE_OCCLUSION":         6,
	}
)

func (x StockNotetype_OriginalStockKind) Enum() *StockNotetype_OriginalStockKind {
	p := new(StockNotetype_OriginalStockKind)
	*p = x
	return p
}

func (x StockNotetype_OriginalStockKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StockNotetype_OriginalStockKind) Descriptor() protoreflect.EnumDescriptor {
	return file_anki_proto_enumTypes[0].Descriptor()
}

func (StockNotetype_OriginalStockKind) Type() protoreflect.EnumType {
	return &file_anki_proto_enumTypes[0]
}

func (x StockNotetype_OriginalStockKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StockNotetype_OriginalStockKind.Descriptor instead.
func (StockNotetype_OriginalStockKind) EnumDescriptor() ([]byte, []int) {
	return file_anki_proto_rawDescGZIP(), []int{0, 0}
}

type NotetypeConfig_Kind int32

const (
	NotetypeConfig_KIND_NORMAL NotetypeConfig_Kind = 0
	NotetypeConfig_KIND_CLOZE  NotetypeConfig_Kind = 1
)

// Enum value maps for NotetypeConfig_Kind.
var (
	NotetypeConfig_Kind_name = map[int32]string{
		0: "KIND_NORMAL",
		1: "KIND_CLOZE",
	}
	NotetypeConfig_Kind_value = map[string]int32{
		"KIND_NORMAL": 0,
		"KIND_CLOZE":  1,
	}
)

func (x NotetypeConfig_Kind) Enum() *NotetypeConfig_Kind {
	p := new(NotetypeConfig_Kind)
	*p = x
	return p
}

func (x NotetypeConfig_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotetypeConfig_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_anki_proto_enumTypes[1].Descriptor()
}

func (NotetypeConfig_Kind) Type() protoreflect.EnumType {
	return &file_anki_proto_enumTypes[1]
}

func (x NotetypeConfig_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotetypeConfig_Kind.Descriptor instead.
func (NotetypeConfig_Kind) EnumDescriptor() ([]byte, []int) {
	return file_anki_proto_rawDescGZIP(), []int{1, 0}
}

type NotetypeConfig_CardRequirement_Kind int32

const (
	NotetypeConfig_CardRequirement_KIND_NONE NotetypeConfig_CardRequirement_Kind = 0
	NotetypeConfig_CardRequirement_KIND_ANY  NotetypeConfig_CardRequirement_Kind = 1
	NotetypeConfig_CardRequirement_KIND_ALL  NotetypeConfig_CardRequirement_Kind = 2
)

// Enum value maps for NotetypeConfig_CardRequirement_Kind.
var (
	NotetypeConfig_CardRequirement_Kind_name = map[int32]string{
		0: "KIND_NONE",
		1: "KIND_ANY",
		2: "KIND_ALL",
	}
	NotetypeConfig_CardRequirement_Kind_value = map[string]int32{
		"KIND_NONE": 0,
		"KIND_ANY":  1,
		"KIND_ALL":  2,
	}
)

func (x NotetypeConfig_CardRequirement_Kind) Enum() *NotetypeConfig_CardRequirement_Kind {
	p := new(NotetypeConfig_CardRequirement_Kind)
	*p = x
	return p
}

func (x NotetypeConfig_CardRequirement_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotetypeConfig_CardRequirement_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_anki_proto_enumTypes[2].Descriptor()
}

func (NotetypeConfig_CardRequirement_Kind) Type() protoreflect.EnumType {
	return &file_anki_proto_enumTypes[2]
}

func (x NotetypeConfig_CardRequirement_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotetypeConfig_CardRequirement_Kind.Descriptor instead.
func (NotetypeConfig_CardRequirement_Kind) EnumDescriptor() ([]byte, []int) {
	return file_anki_proto_rawDescGZIP(), []int{1, 0, 0}
}

type PackageMetadata_Version int32

const (
	PackageMetadata_VERSION_UNKNOWN  PackageMetadata_Version = 0
	PackageMetadata_VERSION_LEGACY_1 PackageMetadata_Version = 1
	PackageMetadata_VERSION_LEGACY_2 PackageMetadata_Version = 2
	PackageMetadata_VERSION_LATEST   PackageMetadata_Version = 3
)

// Enum value maps for PackageMetadata_Version.
var (
	PackageMetadata_Version_name = map[int32]string{
		0: "VERSION_UNKNOWN",
		1: "VERSION_LEGACY_1",
		2: "VERSION_LEGACY_2",
		3: "VERSION_LATEST",
	}
	PackageMetadata_Version_value = map[string]int32{
		"VERSION_UNKNOWN":  0,
		"VERSION_LEGACY_1": 1,
		"VERSION_LEGACY_2": 2,
		"VERSION_LATEST":   3,
	}
)

func (x PackageMetadata_Version) Enum() *PackageMetadata_Version {
	p := new(PackageMetadata_Version)
	*p = x
	return p
}

func (x PackageMetadata_Version) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackageMetadata_Version) Descriptor() protoreflect.EnumDescriptor {
	return file_anki_proto_enumTypes[3].Descriptor()
}

func (PackageMetadata_Version) Type() protoreflect.EnumType {
	return &file_anki_proto_enumTypes[3]
}

func (x PackageMetadata_Version) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PackageMetadata_Version.Descriptor instead.
func (PackageMetadata_Version) EnumDescriptor() ([]byte, []int) {
	return file_anki_proto_rawDescGZIP(), []int{4, 0}
}

type StockNotetype struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockNotetype) Reset() {
	*x = StockNotetype{}
	mi := &file_anki_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockNotetype) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockNotetype) ProtoMessage() {}

func (x *StockNotetype) ProtoReflect() protoreflect.Message {
	mi := &file_anki_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockNotetype.ProtoReflect.Descriptor instead.
func (*StockNotetype) Descriptor() ([]byte, []int) {
	return file_anki_proto_rawDescGZIP(), []int{0}
}

type NotetypeConfig struct {
	state              protoimpl.MessageState            `protogen:"open.v1"`
	Kind               NotetypeConfig_Kind               `protobuf:"varint,1,opt,name=kind,proto3,enum=pb.NotetypeConfig_Kind" json:"kind,omitempty"`
	SortFieldIdx       uint32                            `protobuf:"varint,2,opt,name=sort_field_idx,json=sortFieldIdx,proto3" json:"sort_field_idx,omitempty"`
	Css                string                            `protobuf:"bytes,3,opt,name=css,proto3" json:"css,omitempty"`
	TargetDeckIdUnused int64                             `protobuf:"varint,4,opt,name=target_deck_id_unused,json=targetDeckIdUnused,proto3" json:"target_deck_id_unused,omitempty"`
	LatexPre           string                            `protobuf:"bytes,5,opt,name=latex_pre,json=latexPre,proto3" json:"latex_pre,omitempty"`
	LatexPost          string                            `protobuf:"bytes,6,opt,name=latex_post,json=latexPost,proto3" json:"latex_post,omitempty"`
	LatexSvg           bool                              `protobuf:"varint,7,opt,name=latex_svg,json=latexSvg,proto3" json:"latex_svg,omitempty"`
	Reqs               []*NotetypeConfig_CardRequirement `protobuf:"bytes,8,rep,name=reqs,proto3" json:"reqs,omitempty"`
	OriginalStockKind  StockNotetype_OriginalStockKind   `protobuf:"varint,9,opt,name=original_stock_kind,json=originalStockKind,proto3,enum=pb.StockNotetype_OriginalStockKind" json:"original_stock_kind,omitempty"`
	OriginalId         *int64                            `protobuf:"varint,10,opt,name=original_id,json=originalId,proto3,oneof" json:"original_id,omitempty"`
	Other              []byte                            `protobuf:"bytes,255,opt,name=other,proto3" json:"other,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NotetypeConfig) Reset() {
	*x = NotetypeConfig{}
	mi := &file_anki_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotetypeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotetypeConfig) ProtoMessage() {}

func (x *NotetypeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_anki_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotetypeConfig.ProtoReflect.Descriptor instead.
func (*NotetypeConfig) Descriptor() ([]byte, []int) {
	return file_anki_proto_rawDescGZIP(), []int{1}
}

func (x *NotetypeConfig) GetKind() NotetypeConfig_Kind {
	if x != nil {
		return x.Kind
	}
	return NotetypeConfig_KIND_NORMAL
}

func (x *NotetypeConfig) GetSortFieldIdx() uint32 {
	if x != nil {
		return x.SortFieldIdx
	}
	return 0
}

func (x *NotetypeConfig) GetCss() string {
	if x != nil {
		return x.Css
	}
	return ""
}

func (x *NotetypeConfig) GetTargetDeckIdUnused() int64 {
	if x != nil {
		return x.TargetDeckIdUnused
	}
	return 0
}

func (x *NotetypeConfig) GetLatexPre() string {
	if x != nil {
		return x.LatexPre
	}
	return ""
}

func (x *NotetypeConfig) GetLatexPost() string {
	if x != nil {
		return x.LatexPost
	}
	return ""
}

func (x *NotetypeConfig) GetLatexSvg() bool {
	if x != nil {
		return x.LatexSvg
	}
	return false
}

func (x *NotetypeConfig) GetReqs() []*NotetypeConfig_CardRequirement {
	if x != nil {
		return x.Reqs
	}
	return nil
}

func (x *NotetypeConfig) GetOriginalStockKind() StockNotetype_OriginalStockKind {
	if x != nil {
		return x.OriginalStockKind
	}
	return StockNotetype_ORIGINAL_STOCK_KIND_UNKNOWN
}

func (x *NotetypeConfig) GetOriginalId() int64 {
	if x != nil && x.OriginalId != nil {
		return *x.OriginalId
	}
	return 0
}

func (x *NotetypeConfig) GetOther() []byte {
	if x != nil {
		return x.Other
	}
	return nil
}

type FieldConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Sticky            bool                   `protobuf:"varint,1,opt,name=sticky,proto3" json:"sticky,omitempty"`
	Rtl               bool                   `protobuf:"varint,2,opt,name=rtl,proto3" json:"rtl,omitempty"`
	FontName          string                 `protobuf:"bytes,3,opt,name=font_name,json=fontName,proto3" json:"font_name,omitempty"`
	FontSize          uint32                 `protobuf:"varint,4,opt,name=font_size,json=fontSize,proto3" json:"font_size,omitempty"`
	Description       string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	PlainText         bool                   `protobuf:"varint,6,opt,name=plain_text,json=plainText,proto3" json:"plain_text,omitempty"`
	Collapsed         bool                   `protobuf:"varint,7,opt,name=collapsed,proto3" json:"collapsed,omitempty"`
	ExcludeFromSearch bool                   `protobuf:"varint,8,opt,name=exclude_from_search,json=excludeFromSearch,proto3" json:"exclude_from_search,omitempty"`
	Id                *int64                 `protobuf:"varint,9,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Tag               *uint32                `protobuf:"varint,10,opt,name=tag,proto3,oneof" json:"tag,omitempty"`
	PreventDeletion   bool                   `protobuf:"varint,11,opt,name=prevent_deletion,json=preventDeletion,proto3" json:"prevent_deletion,omitempty"`
	Other             []byte                 `protobuf:"bytes,255,opt,name=other,proto3" json:"other,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *FieldConfig) Reset() {
	*x = FieldConfig{}
	mi := &file_anki_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldConfig) ProtoMessage() {}

func (x *FieldConfig) ProtoReflect() protoreflect.Message {
	mi := &file_anki_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldConfig.ProtoReflect.Descriptor instead.
func (*FieldConfig) Descriptor() ([]byte, []int) {
	return file_anki_proto_rawDescGZIP(), []int{2}
}

func (x *FieldConfig) GetSticky() bool {
	if x != nil {
		return x.Sticky
	}
	return false
}

func (x *FieldConfig) GetRtl() bool {
	if x != nil {
		return x.Rtl
	}
	return false
}

func (x *FieldConfig) GetFontName() string {
	if x != nil {
		return x.FontName
	}
	return ""
}

func (x *FieldConfig) GetFontSize() uint32 {
	if x != nil {
		return x.FontSize
	}
	return 0
}

func (x *FieldConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FieldConfig) GetPlainText() bool {
	if x != nil {
		return x.PlainText
	}
	return false
}

func (x *FieldConfig) GetCollapsed() bool {
	if x != nil {
		return x.Collapsed
	}
	return false
}

func (x *FieldConfig) GetExcludeFromSearch() bool {
	if x != nil {
		return x.ExcludeFromSearch
	}
	return false
}

func (x *FieldConfig) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *FieldConfig) GetTag() uint32 {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return 0
}

func (x *FieldConfig) GetPreventDeletion() bool {
	if x != nil {
		return x.PreventDeletion
	}
	return false
}

func (x *FieldConfig) GetOther() []byte {
	if x != nil {
		return x.Other
	}
	return nil
}

type TemplateConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	QFormat         string                 `protobuf:"bytes,1,opt,name=q_format,json=qFormat,proto3" json:"q_format,omitempty"`
	AFormat         string                 `protobuf:"bytes,2,opt,name=a_format,json=aFormat,proto3" json:"a_format,omitempty"`
	QFormatBrowser  string                 `protobuf:"bytes,3,opt,name=q_format_browser,json=qFormatBrowser,proto3" json:"q_format_browser,omitempty"`
	AFormatBrowser  string                 `protobuf:"bytes,4,opt,name=a_format_browser,json=aFormatBrowser,proto3" json:"a_format_browser,omitempty"`
	TargetDeckId    int64                  `protobuf:"varint,5,opt,name=target_deck_id,json=targetDeckId,proto3" json:"target_deck_id,omitempty"`
	BrowserFontName string                 `protobuf:"bytes,6,opt,name=browser_font_name,json=browserFontName,proto3" json:"browser_font_name,omitempty"`
	BrowserFontSize uint32                 `protobuf:"varint,7,opt,name=browser_font_size,json=browserFontSize,proto3" json:"browser_font_size,omitempty"`
	Id              *int64                 `protobuf:"varint,8,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Other           []byte                 `protobuf:"bytes,255,opt,name=other,proto3" json:"other,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TemplateConfig) Reset() {
	*x = TemplateConfig{}
	mi := &file_anki_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateConfig) ProtoMessage() {}

func (x *TemplateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_anki_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateConfig.ProtoReflect.Descriptor instead.
func (*TemplateConfig) Descriptor() ([]byte, []int) {
	return file_anki_proto_rawDescGZIP(), []int{3}
}

func (x *TemplateConfig) GetQFormat() string {
	if x != nil {
		return x.QFormat
	}
	return ""
}

func (x *TemplateConfig) GetAFormat() string {
	if x != nil {
		return x.AFormat
	}
	return ""
}

func (x *TemplateConfig) GetQFormatBrowser() string {
	if x != nil {
		return x.QFormatBrowser
	}
	return ""
}

func (x *TemplateConfig) GetAFormatBrowser() string {
	if x != nil {
		return x.AFormatBrowser
	}
	return ""
}

func (x *TemplateConfig) GetTargetDeckId() int64 {
	if x != nil {
		return x.TargetDeckId
	}
	return 0
}

func (x *TemplateConfig) GetBrowserFontName() string {
	if x != nil {
		return x.BrowserFontName
	}
	return ""
}

func (x *TemplateConfig) GetBrowserFontSize() uint32 {
	if x != nil {
		return x.BrowserFontSize
	}
	return 0
}

func (x *TemplateConfig) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *TemplateConfig) GetOther() []byte {
	if x != nil {
		return x.Other
	}
	return nil
}

type PackageMetadata struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Version       PackageMetadata_Version `protobuf:"varint,1,opt,name=version,proto3,enum=pb.PackageMetadata_Version" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackageMetadata) Reset() {
	*x = PackageMetadata{}
	mi := &file_anki_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageMetadata) ProtoMessage() {}

func (x *PackageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_anki_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageMetadata.ProtoReflect.Descriptor instead.
func (*PackageMetadata) Descriptor() ([]byte, []int) {
	return file_anki_proto_rawDescGZIP(), []int{4}
}

func (x *PackageMetadata) GetVersion() PackageMetadata_Version {
	if x != nil {
		return x.Version
	}
	return PackageMetadata_VERSION_UNKNOWN
}

type MediaEntries struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Entries       []*MediaEntries_MediaEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaEntries) Reset() {
	*x = MediaEntries{}
	mi := &file_anki_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaEntries) ProtoMessage() {}

func (x *MediaEntries) ProtoReflect() protoreflect.Message {
	mi := &file_anki_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaEntries.ProtoReflect.Descriptor instead.
func (*MediaEntries) Descriptor() ([]byte, []int) {
	return file_anki_proto_rawDescGZIP(), []int{5}
}

func (x *MediaEntries) GetEntries() []*MediaEntries_MediaEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type NotetypeConfig_CardRequirement struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	CardOrd       uint32                              `protobuf:"varint,1,opt,name=card_ord,json=cardOrd,proto3" json:"card_ord,omitempty"`
	Kind          NotetypeConfig_CardRequirement_Kind `protobuf:"varint,2,opt,name=kind,proto3,enum=pb.NotetypeConfig_CardRequirement_Kind" json:"kind,omitempty"`
	FieldOrds     []uint32                            `protobuf:"varint,3,rep,packed,name=field_ords,json=fieldOrds,proto3" json:"field_ords,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotetypeConfig_CardRequirement) Reset() {
	*x = NotetypeConfig_CardRequirement{}
	mi := &file_anki_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotetypeConfig_CardRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotetypeConfig_CardRequirement) ProtoMessage() {}

func (x *NotetypeConfig_CardRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_anki_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotetypeConfig_CardRequirement.ProtoReflect.Descriptor instead.
func (*NotetypeConfig_CardRequirement) Descriptor() ([]byte, []int) {
	return file_anki_proto_rawDescGZIP(), []int{1, 0}
}

func (x *NotetypeConfig_CardRequirement) GetCardOrd() uint32 {
	if x != nil {
		return x.CardOrd
	}
	return 0
}

func (x *NotetypeConfig_CardRequirement) GetKind() NotetypeConfig_CardRequirement_Kind {
	if x != nil {
		return x.Kind
	}
	return NotetypeConfig_CardRequirement_KIND_NONE
}

func (x *NotetypeConfig_CardRequirement) GetFieldOrds() []uint32 {
	if x != nil {
		return x.FieldOrds
	}
	return nil
}

type MediaEntries_MediaEntry struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size              uint32                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Sha1              []byte                 `protobuf:"bytes,3,opt,name=sha1,proto3" json:"sha1,omitempty"`
	LegacyZipFilename *uint32                `protobuf:"varint,255,opt,name=legacy_zip_filename,json=legacyZipFilename,proto3,oneof" json:"legacy_zip_filename,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MediaEntries_MediaEntry) Reset() {
	*x = MediaEntries_MediaEntry{}
	mi := &file_anki_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaEntries_MediaEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaEntries_MediaEntry) ProtoMessage() {}

func (x *MediaEntries_MediaEntry) ProtoReflect() protoreflect.Message {
	mi := &file_anki_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaEntries_MediaEntry.ProtoReflect.Descriptor instead.
func (*MediaEntries_MediaEntry) Descriptor() ([]byte, []int) {
	return file_anki_proto_rawDescGZIP(), []int{5, 0}
}

func (x *MediaEntries_MediaEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MediaEntries_MediaEntry) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MediaEntries_MediaEntry) GetSha1() []byte {
	if x != nil {
		return x.Sha1
	}
	return nil
}

func (x *MediaEntries_MediaEntry) GetLegacyZipFilename() uint32 {
	if x != nil && x.LegacyZipFilename != nil {
		return *x.LegacyZipFilename
	}
	return 0
}

var File_anki_proto protoreflect.FileDescriptor

const file_anki_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"anki.proto\x12\x02pb\"\xb0\x02\n" +
	"\rStockNotetype\"\x9e\x02\n" +
	"\x11OriginalStockKind\x12\x1f\n" +
	"\x1bORIGINAL_STOCK_KIND_UNKNOWN\x10\x00\x12\x1d\n" +
	"\x19ORIGINAL_STOCK_KIND_BASIC\x10\x01\x12*\n" +
	"&ORIGINAL_STOCK_KIND_BASIC_AND_REVERSED\x10\x02\x12/\n" +
	"+ORIGINAL_STOCK_KIND_BASIC_OPTIONAL_REVERSED\x10\x03\x12$\n" +
	" ORIGINAL_STOCK_KIND_BASIC_TYPING\x10\x04\x12\x1d\n" +
	"\x19ORIGINAL_STOCK_KIND_CLOZE\x10\x05\x12'\n" +
	"#ORIGINAL_STOCK_KIND_IMAGE_OCCLUSION\x10\x06\"\xc2\x05\n" +
	"\x0eNotetypeConfig\x12+\n" +
	"\x04kind\x18\x01 \x01(\x0e2\x17.pb.NotetypeConfig.KindR\x04kind\x12$\n" +
	"\x0esort_field_idx\x18\x02 \x01(\rR\fsortFieldIdx\x12\x10\n" +
	"\x03css\x18\x03 \x01(\tR\x03css\x121\n" +
	"\x15target_deck_id_unused\x18\x04 \x01(\x03R\x12targetDeckIdUnused\x12\x1b\n" +
	"\tlatex_pre\x18\x05 \x01(\tR\blatexPre\x12\x1d\n" +
	"\n" +
	"latex_post\x18\x06 \x01(\tR\tlatexPost\x12\x1b\n" +
	"\tlatex_svg\x18\a \x01(\bR\blatexSvg\x126\n" +
	"\x04reqs\x18\b \x03(\v2\".pb.NotetypeConfig.CardRequirementR\x04reqs\x12S\n" +
	"\x13original_stock_kind\x18\t \x01(\x0e2#.pb.StockNotetype.OriginalStockKindR\x11originalStockKind\x12$\n" +
	"\voriginal_id\x18\n" +
	" \x01(\x03H\x00R\n" +
	"originalId\x88\x01\x01\x12\x15\n" +
	"\x05other\x18\xff\x01 \x01(\fR\x05other\x1a\xbb\x01\n" +
	"\x0fCardRequirement\x12\x19\n" +
	"\bcard_ord\x18\x01 \x01(\rR\acardOrd\x12;\n" +
	"\x04kind\x18\x02 \x01(\x0e2'.pb.NotetypeConfig.CardRequirement.KindR\x04kind\x12\x1d\n" +
	"\n" +
	"field_ords\x18\x03 \x03(\rR\tfieldOrds\"1\n" +
	"\x04Kind\x12\r\n" +
	"\tKIND_NONE\x10\x00\x12\f\n" +
	"\bKIND_ANY\x10\x01\x12\f\n" +
	"\bKIND_ALL\x10\x02\"'\n" +
	"\x04Kind\x12\x0f\n" +
	"\vKIND_NORMAL\x10\x00\x12\x0e\n" +
	"\n" +
	"KIND_CLOZE\x10\x01B\x0e\n" +
	"\f_original_id\"\xfd\x02\n" +
	"\vFieldConfig\x12\x16\n" +
	"\x06sticky\x18\x01 \x01(\bR\x06sticky\x12\x10\n" +
	"\x03rtl\x18\x02 \x01(\bR\x03rtl\x12\x1b\n" +
	"\tfont_name\x18\x03 \x01(\tR\bfontName\x12\x1b\n" +
	"\tfont_size\x18\x04 \x01(\rR\bfontSize\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"plain_text\x18\x06 \x01(\bR\tplainText\x12\x1c\n" +
	"\tcollapsed\x18\a \x01(\bR\tcollapsed\x12.\n" +
	"\x13exclude_from_search\x18\b \x01(\bR\x11excludeFromSearch\x12\x13\n" +
	"\x02id\x18\t \x01(\x03H\x00R\x02id\x88\x01\x01\x12\x15\n" +
	"\x03tag\x18\n" +
	" \x01(\rH\x01R\x03tag\x88\x01\x01\x12)\n" +
	"\x10prevent_deletion\x18\v \x01(\bR\x0fpreventDeletion\x12\x15\n" +
	"\x05other\x18\xff\x01 \x01(\fR\x05otherB\x05\n" +
	"\x03_idB\x06\n" +
	"\x04_tag\"\xcb\x02\n" +
	"\x0eTemplateConfig\x12\x19\n" +
	"\bq_format\x18\x01 \x01(\tR\aqFormat\x12\x19\n" +
	"\ba_format\x18\x02 \x01(\tR\aaFormat\x12(\n" +
	"\x10q_format_browser\x18\x03 \x01(\tR\x0eqFormatBrowser\x12(\n" +
	"\x10a_format_browser\x18\x04 \x01(\tR\x0eaFormatBrowser\x12$\n" +
	"\x0etarget_deck_id\x18\x05 \x01(\x03R\ftargetDeckId\x12*\n" +
	"\x11browser_font_name\x18\x06 \x01(\tR\x0fbrowserFontName\x12*\n" +
	"\x11browser_font_size\x18\a \x01(\rR\x0fbrowserFontSize\x12\x13\n" +
	"\x02id\x18\b \x01(\x03H\x00R\x02id\x88\x01\x01\x12\x15\n" +
	"\x05other\x18\xff\x01 \x01(\fR\x05otherB\x05\n" +
	"\x03_id\"\xa8\x01\n" +
	"\x0fPackageMetadata\x125\n" +
	"\aversion\x18\x01 \x01(\x0e2\x1b.pb.PackageMetadata.VersionR\aversion\"^\n" +
	"\aVersion\x12\x13\n" +
	"\x0fVERSION_UNKNOWN\x10\x00\x12\x14\n" +
	"\x10VERSION_LEGACY_1\x10\x01\x12\x14\n" +
	"\x10VERSION_LEGACY_2\x10\x02\x12\x12\n" +
	"\x0eVERSION_LATEST\x10\x03\"\xde\x01\n" +
	"\fMediaEntries\x125\n" +
	"\aentries\x18\x01 \x03(\v2\x1b.pb.MediaEntries.MediaEntryR\aentries\x1a\x96\x01\n" +
	"\n" +
	"MediaEntry\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\rR\x04size\x12\x12\n" +
	"\x04sha1\x18\x03 \x01(\fR\x04sha1\x124\n" +
	"\x13legacy_zip_filename\x18\xff\x01 \x01(\rH\x00R\x11legacyZipFilename\x88\x01\x01B\x16\n" +
	"\x14_legacy_zip_filenameB\"Z github.com/lftk/anki/internal/pbb\x06proto3"

var (
	file_anki_proto_rawDescOnce sync.Once
	file_anki_proto_rawDescData []byte
)

func file_anki_proto_rawDescGZIP() []byte {
	file_anki_proto_rawDescOnce.Do(func() {
		file_anki_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_anki_proto_rawDesc), len(file_anki_proto_rawDesc)))
	})
	return file_anki_proto_rawDescData
}

var file_anki_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_anki_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_anki_proto_goTypes = []any{
	(StockNotetype_OriginalStockKind)(0),     // 0: pb.StockNotetype.OriginalStockKind
	(NotetypeConfig_Kind)(0),                 // 1: pb.NotetypeConfig.Kind
	(NotetypeConfig_CardRequirement_Kind)(0), // 2: pb.NotetypeConfig.CardRequirement.Kind
	(PackageMetadata_Version)(0),             // 3: pb.PackageMetadata.Version
	(*StockNotetype)(nil),                    // 4: pb.StockNotetype
	(*NotetypeConfig)(nil),                   // 5: pb.NotetypeConfig
	(*FieldConfig)(nil),                      // 6: pb.FieldConfig
	(*TemplateConfig)(nil),                   // 7: pb.TemplateConfig
	(*PackageMetadata)(nil),                  // 8: pb.PackageMetadata
	(*MediaEntries)(nil),                     // 9: pb.MediaEntries
	(*NotetypeConfig_CardRequirement)(nil),   // 10: pb.NotetypeConfig.CardRequirement
	(*MediaEntries_MediaEntry)(nil),          // 11: pb.MediaEntries.MediaEntry
}
var file_anki_proto_depIdxs = []int32{
	1,  // 0: pb.NotetypeConfig.kind:type_name -> pb.NotetypeConfig.Kind
	10, // 1: pb.NotetypeConfig.reqs:type_name -> pb.NotetypeConfig.CardRequirement
	0,  // 2: pb.NotetypeConfig.original_stock_kind:type_name -> pb.StockNotetype.OriginalStockKind
	3,  // 3: pb.PackageMetadata.version:type_name -> pb.PackageMetadata.Version
	11, // 4: pb.MediaEntries.entries:type_name -> pb.MediaEntries.MediaEntry
	2,  // 5: pb.NotetypeConfig.CardRequirement.kind:type_name -> pb.NotetypeConfig.CardRequirement.Kind
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_anki_proto_init() }
func file_anki_proto_init() {
	if File_anki_proto != nil {
		return
	}
	file_anki_proto_msgTypes[1].OneofWrappers = []any{}
	file_anki_proto_msgTypes[2].OneofWrappers = []any{}
	file_anki_proto_msgTypes[3].OneofWrappers = []any{}
	file_anki_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_anki_proto_rawDesc), len(file_anki_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_anki_proto_goTypes,
		DependencyIndexes: file_anki_proto_depIdxs,
		EnumInfos:         file_anki_proto_enumTypes,
		MessageInfos:      file_anki_proto_msgTypes,
	}.Build()
	File_anki_proto = out.File
	file_anki_proto_goTypes = nil
	file_anki_proto_depIdxs = nil
}
